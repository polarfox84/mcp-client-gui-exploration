services:
  postgres:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/10-init.sql:ro
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app_db"]
      interval: 5s
      timeout: 3s
      retries: 10

  mcp-http-server:
    profiles: ["prod"]
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: mcp_http_server
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/app_db"
      PORT: "8000"
      # Pass-through from host shell; value is not stored in git
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL}
    ports:
      - "8000:8000"
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Dev server with hot reload (tsx watch) and live code mounts
  mcp-http-server-dev:
    profiles: ["dev"]
    build:
      context: ./server
      dockerfile: Dockerfile
      target: dev
    container_name: mcp_http_server_dev
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/app_db"
      PORT: "8000"
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL}
      NODE_ENV: development
    command: ["npm", "run", "dev"]
    ports:
      - "8000:8000"
    volumes:
      - ./server/src:/app/src
      - ./server/tsconfig.json:/app/tsconfig.json
      - ./server/package.json:/app/package.json
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Vite dev server for the web app with HMR
  web-dev:
    profiles: ["dev"]
    image: node:20-alpine
    working_dir: /app
    container_name: web_dev
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    ports:
      - "5173:5173"
    volumes:
      - ./web:/app
      - /app/node_modules
    environment:
      # Point web app to server running on host: use localhost:8000 from the browser
      NODE_ENV: development
    networks:
      - app_network
    depends_on:
      - mcp-http-server-dev

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge